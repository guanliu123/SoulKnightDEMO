
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Item : Luban.BeanBase
{
    public Item(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["type"].IsNumber) { throw new SerializationException(); }  Type = _buf["type"]; }
        { if(!_buf["quality"].IsNumber) { throw new SerializationException(); }  Quality = _buf["quality"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["desc"].IsString) { throw new SerializationException(); }  Desc = _buf["desc"]; }
        { if(!_buf["icon"].IsString) { throw new SerializationException(); }  Icon = _buf["icon"]; }
        { if(!_buf["icon_text"].IsString) { throw new SerializationException(); }  IconText = _buf["icon_text"]; }
        { if(!_buf["para1"].IsString) { throw new SerializationException(); }  Para1 = _buf["para1"]; }
        { if(!_buf["para2"].IsString) { throw new SerializationException(); }  Para2 = _buf["para2"]; }
        { if(!_buf["bag_show"].IsNumber) { throw new SerializationException(); }  BagShow = _buf["bag_show"]; }
        { if(!_buf["bag_sort"].IsNumber) { throw new SerializationException(); }  BagSort = _buf["bag_sort"]; }
        { if(!_buf["bag_use"].IsNumber) { throw new SerializationException(); }  BagUse = _buf["bag_use"]; }
        { if(!_buf["quick_use"].IsNumber) { throw new SerializationException(); }  QuickUse = _buf["quick_use"]; }
        { if(!_buf["required_level"].IsNumber) { throw new SerializationException(); }  RequiredLevel = _buf["required_level"]; }
        { if(!_buf["source_id"].IsString) { throw new SerializationException(); }  SourceId = _buf["source_id"]; }
        { if(!_buf["show_chance"].IsNumber) { throw new SerializationException(); }  ShowChance = _buf["show_chance"]; }
    }

    public static Item DeserializeItem(JSONNode _buf)
    {
        return new Item(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 道具类型
    /// </summary>
    public readonly int Type;
    /// <summary>
    /// 道具品质
    /// </summary>
    public readonly int Quality;
    /// <summary>
    /// 道具名字
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 道具描述
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string Icon;
    /// <summary>
    /// 图标文本
    /// </summary>
    public readonly string IconText;
    /// <summary>
    /// 参数1
    /// </summary>
    public readonly string Para1;
    /// <summary>
    /// 参数2
    /// </summary>
    public readonly string Para2;
    /// <summary>
    /// 背包显示
    /// </summary>
    public readonly int BagShow;
    /// <summary>
    /// 排序优先级
    /// </summary>
    public readonly int BagSort;
    /// <summary>
    /// 背包使用
    /// </summary>
    public readonly int BagUse;
    /// <summary>
    /// 自动使用
    /// </summary>
    public readonly int QuickUse;
    /// <summary>
    /// 使用等级下限
    /// </summary>
    public readonly int RequiredLevel;
    /// <summary>
    /// 获取途径
    /// </summary>
    public readonly string SourceId;
    /// <summary>
    /// 详情显示
    /// </summary>
    public readonly int ShowChance;
   
    public const int __ID__ = 2289459;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "type:" + Type + ","
        + "quality:" + Quality + ","
        + "name:" + Name + ","
        + "desc:" + Desc + ","
        + "icon:" + Icon + ","
        + "iconText:" + IconText + ","
        + "para1:" + Para1 + ","
        + "para2:" + Para2 + ","
        + "bagShow:" + BagShow + ","
        + "bagSort:" + BagSort + ","
        + "bagUse:" + BagUse + ","
        + "quickUse:" + QuickUse + ","
        + "requiredLevel:" + RequiredLevel + ","
        + "sourceId:" + SourceId + ","
        + "showChance:" + ShowChance + ","
        + "}";
    }
}

}

